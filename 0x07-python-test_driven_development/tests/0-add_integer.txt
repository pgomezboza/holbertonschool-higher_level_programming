    Test import method:
    >>> add_integer = __import__('0-add_integer').add_integer

    Test use of default b=98 value:
    >>> print(add_integer(1))
    99

    Test signed and unsigned int and float:
    >>> print(add_integer(1, 1))
    2

    >>> print(add_integer(-1,1))
    0

    >>> print(add_integer(2.2, 3))
    5


    Test other regular operations:
    >>> print(add_integer(2, 3))
    5

    >>> print(add_integer(2, -4))
    -2

    >>> print(add_integer(-6, 8))
    2

    Test args:
    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(None, None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    Test more arg:
    >>> print(add_integer(0, 1, 2))
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    Test other data types:
    >>> print(add_integer("hello"))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(0, [1]))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
